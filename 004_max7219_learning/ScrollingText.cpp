#include "ScrollingText.h"

void setupScrollingText(LedControl& lc) {
    lc.shutdown(0, false);
    lc.setIntensity(0, 8);
    lc.clearDisplay(0);
}

void loopScrollingText(LedControl& lc) {
    scrollText(lc, "LEONS ");
}

void scrollText(LedControl& lc, String text) {
    int len = text.length();
    for (int i = 0; i < len * 8; i++) {
        lc.clearDisplay(0);
        for (int j = 0; j < len; j++) {
            drawChar(lc, 8 * j - i, text.charAt(j));
        }
        delay(100);
    }
}

void drawChar(LedControl& lc, int x, char c) {
    byte data[8] = {0};
    // Bitmap mappings for characters 'A' to 'Z' and digits '0' to '9'
    byte font[][8] = {
        {0x7E, 0x81, 0x95, 0x81, 0x95, 0x81, 0x7E, 0x00},  // 'A'
        {0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x6C, 0x00},  // 'B'
        {0x7C, 0x82, 0x81, 0x81, 0x81, 0x82, 0x44, 0x00},  // 'C'
        {0xFE, 0x82, 0x82, 0x82, 0x82, 0x82, 0x7C, 0x00},  // 'D'
        {0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x82, 0x00},  // 'E'
        {0xFE, 0x90, 0x90, 0x90, 0x90, 0x90, 0x80, 0x00},  // 'F'
        {0x7C, 0x82, 0x81, 0x89, 0x89, 0x8A, 0x4C, 0x00},  // 'G'
        {0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFE, 0x00},  // 'H'
        {0x00, 0x82, 0xFE, 0x82, 0x00, 0x00, 0x00, 0x00},  // 'I'
        {0x04, 0x02, 0x01, 0x81, 0xFE, 0x80, 0x00, 0x00},  // 'J'
        {0xFE, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00, 0x00},  // 'K'
        {0x00, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80},  // 'L'
        {0xFE, 0x40, 0x30, 0x0C, 0x30, 0x40, 0xFE, 0x00},  // 'M'
        {0xFE, 0x20, 0x10, 0x08, 0x04, 0x02, 0xFE, 0x00},  // 'N'
        {0x7C, 0x82, 0x81, 0x81, 0x81, 0x82, 0x7C, 0x00},  // 'O'
        {0xFE, 0x90, 0x90, 0x90, 0x90, 0x90, 0x60, 0x00},  // 'P'
        {0x7C, 0x82, 0x81, 0x85, 0x82, 0x81, 0x7D, 0x00},  // 'Q'
        {0xFE, 0x90, 0x90, 0x98, 0x94, 0x92, 0x61, 0x00},  // 'R'
        {0x64, 0x92, 0x92, 0x92, 0x92, 0x92, 0x4C, 0x00},  // 'S'
        {0x80, 0x80, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x00},  // 'T'
        {0xFC, 0x02, 0x01, 0x01, 0x01, 0x02, 0xFC, 0x00},  // 'U'
        {0xF8, 0x04, 0x02, 0x01, 0x02, 0x04, 0xF8, 0x00},  // 'V'
        {0xFE, 0x04, 0x18, 0x60, 0x18, 0x04, 0xFE, 0x00},  // 'W'
        {0xC6, 0x28, 0x10, 0x10, 0x28, 0xC6, 0x00, 0x00},  // 'X'
        {0xC0, 0x20, 0x1E, 0x20, 0xC0, 0x00, 0x00, 0x00},  // 'Y'
        {0x86, 0x8A, 0x92, 0xA2, 0xC2, 0x00, 0x00, 0x00},  // 'Z'
        {0x7E, 0x89, 0x91, 0xA1, 0x7E, 0x00, 0x00, 0x00},  // '0'
        {0x00, 0x42, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00},  // '1'
        {0x42, 0x87, 0x89, 0x91, 0x62, 0x00, 0x00, 0x00},  // '2'
        {0x42, 0x89, 0x89, 0x89, 0x76, 0x00, 0x00, 0x00},  // '3'
        {0x18, 0x28, 0x48, 0xFE, 0x08, 0x00, 0x00, 0x00},  // '4'
        {0xF2, 0x91, 0x91, 0x91, 0x8E, 0x00, 0x00, 0x00},  // '5'
        {0x7E, 0x91, 0x91, 0x91, 0x4E, 0x00, 0x00, 0x00},  // '6'
        {0x80, 0x8F, 0x90, 0xA0, 0xC0, 0x00, 0x00, 0x00},  // '7'
        {0x76, 0x89, 0x89, 0x89, 0x76, 0x00, 0x00, 0x00},  // '8'
        {0x62, 0x91, 0x91, 0x91, 0x7E, 0x00, 0x00, 0x00}   // '9'
    };

    // Convert character to uppercase
    if (c >= 'a' && c <= 'z') {
        c -= 32; // Convert lowercase to uppercase
    }

    // Check if character is within supported range (A-Z and 0-9)
    if ((c < 'A' || c > 'Z') && (c < '0' || c > '9')) {
        return; // Unsupported character
    }

    // Copy bitmap data for the character to data array
    for (int i = 0; i < 8; i++) {
        data[i] = font[c - (c >= '0' && c <= '9' ? '0' : 'A')][i];
    }

    // Display the character at position x
    for (int i = 0; i < 8; i++) {
        if (x + i >= 0 && x + i < 8) {
            lc.setRow(0, x + i, data[i]);
        }
    }
}

